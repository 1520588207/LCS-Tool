function varargout = lcs_tool(varargin)

gui_Singleton = 1;
gui_State = struct('gui_Name',mfilename,...
    'gui_Singleton',gui_Singleton,...
    'gui_OpeningFcn',@lcs_tool_OpeningFcn,...
    'gui_OutputFcn',@lcs_tool_OutputFcn,...
    'gui_LayoutFcn',@lcs_tool_LayoutFcn,...
    'gui_Callback',[]);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end

function lcs_tool_OpeningFcn(hObject,~,handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to lcs_tool_export (see VARARGIN)

% Choose default command line output for lcs_tool_export
handles.output = hObject;
set(hObject,'Name','LCS Tool')

% FIXME Should restore original path
% path(pwd,path)

guidata(hObject,handles);

function varargout = lcs_tool_OutputFcn(~,~,handles) 

varargout{1} = handles.output;

function fileMenu_Callback(~,~,handles)

if isappdata(handles.LCSTool,'flow')
    % set(handles.fileSave,'Enable','On')
    % set(handles.fileSaveAs,'Enable','On')
    % set(handles.filePrintPreview,'Enable','On')
    % set(handles.filePrint,'Enable','On')
else
    % set(handles.fileSave,'Enable','Off')
    % set(handles.fileSaveAs,'Enable','Off')
    % set(handles.filePrintPreview,'Enable','Off')
    % set(handles.filePrint,'Enable','Off')
end

function fileOpen_Callback(~,~,handles)

cd('flow_templates')
[flowFile,flowPath] = uigetfile({'*.mat;*.m','MATLAB Files (*.m,*.mat)'});
cd('../')

if flowFile
    loadInputFile(flowFile,flowPath,handles)

    set(handles.fileOpen,'enable','off')
    % set(handles.fileSave,'Enable','On')
    
    set(handles.playButton,'enable','on')
    set(handles.FTLEDisplayCheckbox,'enable','on')
    
    set(handles.strainlineDisplayCheckbox,'enable','on')
    set(handles.strainlineDisplayIcChecbox,'enable','on')
    set(handles.strainlineResX,'enable','on')
    set(handles.strainlineResY,'enable','on')
    set(handles.strainlineFilteredDisplayCheckbox,'enable','on')
    set(handles.maximumGeodesicDeviationThreshold,'enable','on')
    set(handles.geodesicDeviationMinLength,'enable','on')
    set(handles.filteringDistance,'enable','on')
    
    set(handles.applyButton,'enable','on')

    set(handles.shearlineResX,'enable','on')
    set(handles.shearlineResY,'enable','on')
    set(handles.shearlineDisplayIcCheckbox,'enable','on')
    set(handles.etaPosQuiverCheckbox,'enable','on')
    set(handles.etaNegQuiverCheckbox,'enable','on')
    set(handles.shearLcsPosCheckbox,'enable','on')
    set(handles.shearLcsNegCheckbox,'enable','on')
    set(handles.shearAverageGeodesicDeviationPosTol,'enable','on')
    set(handles.shearAverageGeodesicDeviationNegTol,'enable','on')
    set(handles.shearApplyButton,'enable','on')

end

function fileClose_Callback(hObject,~,~)
close(ancestor(hObject,'figure'))

function settingsMenu_Callback(~,~,handles)

if isfield(getappdata(handles.LCSTool,'flow'),'parameters')
    set(handles.settingsFlowParameters,'Enable','On')
else
    set(handles.settingsFlowParameters,'Enable','Off')
end

function FTLEDisplayCheckbox_Callback(hObject,~,handles)

FTLE_handle = findobj(handles.strainlineAxes,'tag','FTLE');

if get(hObject,'Value')
    if FTLE_handle
        set(FTLE_handle,'Visible','on')
    else
        flow = getappdata(handles.LCSTool,'flow');
        if ~isfield(flow,'ftle')
            flow.ftle = compute_ftle(flow.cgEigenvalue(:,2),...
                flow.finalTime - flow.initialTime);
            flow.ftle = reshape(flow.ftle,fliplr(flow.resolution));
            setappdata(handles.LCSTool,'flow',flow)
        end
        h = pcolor(handles.strainlineAxes,...
            linspace(flow.domain(1,1),flow.domain(1,2),...
            flow.resolution(1)),linspace(flow.domain(2,1),...
            flow.domain(2,2),flow.resolution(2)),flow.ftle);
        set(h,'Tag','FTLE')
        shading(handles.strainlineAxes,'interp')
    end
else
    if FTLE_handle
        set(FTLE_handle,'Visible','off')
    end
end

function shearlineDisplayIcCheckbox_callback(hObject,~,handles)

showPlot = getappdata(handles.LCSTool,'shearlineShowPlot');

if get(hObject,'Value')
    set(findobj(handles.shearlineAxes,'tag','shearlineInitialPosition'),...
        'visible','on')
    showPlot.shearlineInitialPosition = true;
else
    set(findobj(handles.shearlineAxes,'tag','shearlineInitialPosition'),...
        'visible','off')
    showPlot.shearlineInitialPosition = false;
end

setappdata(handles.LCSTool,'shearlineShowPlot',showPlot);

function etaPosQuiverCheckbox_callback(hObject,~,handles)

if get(hObject,'Value')
    set(findobj(handles.shearlineAxes,'tag','etaPosQuiver'),'visible','on')
else
    set(findobj(handles.shearlineAxes,'tag','etaPosQuiver'),'visible',...
        'off')
end

function etaNegQuiverCheckbox_callback(hObject,~,handles)

if get(hObject,'Value')
    set(findobj(handles.shearlineAxes,'tag','etaNegQuiver'),'visible','on')
else
    set(findobj(handles.shearlineAxes,'tag','etaNegQuiver'),'visible',...
        'off')
end

function shearLcsPosCheckbox_callback(hObject,~,handles)

shearlineShowPlot = getappdata(handles.LCSTool,'shearlineShowPlot');

if get(hObject,'Value')
    set(findobj(handles.shearlineAxes,'tag','shearlinePosFiltered'),...
        'visible','on')
    shearlineShowPlot.shearlinePosFiltered = true;
    set(handles.shearAverageGeodesicDeviationPosTol,'enable','on')
else
    set(findobj(handles.shearlineAxes,'tag','shearlinePosFiltered'),...
        'visible','off')
    shearlineShowPlot.shearlinePosFiltered = false;
    set(handles.shearAverageGeodesicDeviationPosTol,'enable','off')
end

setappdata(handles.LCSTool,'shearlineShowPlot',shearlineShowPlot);

function shearLcsNegCheckbox_callback(hObject,~,handles)

shearlineShowPlot = getappdata(handles.LCSTool,'shearlineShowPlot');

if get(hObject,'Value')
    set(findobj(handles.shearlineAxes,'tag','shearlineNegFiltered'),...
        'visible','on')
    shearlineShowPlot.shearlineNegFiltered = true;
    set(handles.shearAverageGeodesicDeviationNegTol,'enable','on')
else
    set(findobj(handles.shearlineAxes,'tag','shearlineNegFiltered'),...
        'visible','off')
    shearlineShowPlot.shearlineNegFiltered = false;
    set(handles.shearAverageGeodesicDeviationNegTol,'enable','off')
end

setappdata(handles.LCSTool,'shearlineShowPlot',shearlineShowPlot);

function shearAverageGeodesicDeviationPosTol_callback(hObject,~,handles)

input = str2double(get(hObject,'string'));

shearline = getappdata(handles.LCSTool,'shearline');

% Set tolerance to max or min of dataset
if input < min(shearline.averageGeodesicDeviationPos)
    input = min(shearline.averageGeodesicDeviationPos);
    set(hObject,'string',num2str(input))
end

if input > max(shearline.averageGeodesicDeviationPos)
    input = max(shearline.averageGeodesicDeviationPos);
    set(hObject,'string',num2str(input))
end

shearline = set_shearline_average_geodesic_deviation_tol([input ...
    shearline.averageGeodesicDeviationNegTol],shearline);
flow = getappdata(handles.LCSTool,'flow');
[~,shearline] = compute_shear_lcs(flow,shearline);
setappdata(handles.LCSTool,'shearline',shearline);

function shearAverageGeodesicDeviationNegTol_callback(hObject,~,handles)

input = str2double(get(hObject,'string'));

shearline = getappdata(handles.LCSTool,'shearline');

% Set tolerance to max or min of dataset
if input < min(shearline.averageGeodesicDeviationNeg)
    input = min(shearline.averageGeodesicDeviationNeg);
    set(hObject,'string',num2str(input))
end

if input > max(shearline.averageGeodesicDeviationNeg)
    input = max(shearline.averageGeodesicDeviationNeg);
    set(hObject,'string',num2str(input))
end

shearline = set_shearline_average_geodesic_deviation_tol(...
    [shearline.averageGeodesicDeviationPosTol input],shearline);
flow = getappdata(handles.LCSTool,'flow');
[~,shearline] = compute_shear_lcs(flow,shearline);
setappdata(handles.LCSTool,'shearline',shearline);

function strainlineFilteredDisplayCheckbox_Callback(hObject,~,handles)

parameterHandles = [handles.maximumGeodesicDeviationThreshold ...
    handles.geodesicDeviationMinLength ...
    handles.filteringDistance];

if get(hObject,'Value')
    set(parameterHandles,'Enable','on')
    set(findobj(handles.strainlineAxes,'Tag','filteredStrainline'),...
        'Visible','on')
else
    set(parameterHandles,'Enable','off')
    set(findobj(handles.strainlineAxes,'Tag','filteredStrainline'),...
        'Visible','off')
end

function strainlineDisplayCheckbox_Callback(hObject,~,handles)

strainline_handle = findobj(handles.strainlineAxes,'Tag','strainline');

if get(hObject,'Value')
    if strainline_handle
        set(strainline_handle,'Visible','on')
    else
        strainline = getappdata(handles.LCSTool,'strainline');
        if ~isfield(strainline,'position')
            flow = getappdata(handles.LCSTool,'flow');
            
            hWaitbar = waitbar(0,'Integrating strainlines','visible',...
                'off');
            center_waitbar(hWaitbar,handles.LCSTool)
            set(hWaitbar,'visible','on')
            drawnow
            strainline.position = compute_strainline(flow,strainline,...
                initialPosition,flow.cgEigenvalue,flow.cgEigenvector,...
                strainline.fixedPointScaling);
            close(hWaitbar)
            
            setappdata(handles.LCSTool,'strainline',strainline)
        end
        cellfun(@(position)plot(handles.strainlineAxes,position(:,1),...
            position(:,2),'color','k','Tag','strainline'),...
            strainline.position)
        uistack(findobj(handles.strainlineAxes,'Tag','strainline'),...
            'bottom')
    end
else
    set(strainline_handle,'Visible','off')
end

function strainlineDisplayIcChecbox_Callback(hObject,~,handles)

strainlineIC_handle = findobj(handles.strainlineAxes,'Tag','strainlineIC');

if get(hObject,'Value')
    if strainlineIC_handle
        set(strainlineIC_handle,'Visible','on')
    else
        strainline = getappdata(handles.LCSTool,'strainline');
        flow = getappdata(handles.LCSTool,'flow');
        strainline_ic_ = initialize_ic_grid(strainline.resolution,...
            flow.domain);
        plot(handles.strainlineAxes,strainline_ic_(:,1),...
            strainline_ic_(:,2),'MarkerFaceColor','k',...
            'MarkerEdgeColor','k','Marker','o','LineStyle','none',...
            'Tag','strainlineIC')
    end
else
    set(strainlineIC_handle,'Visible','off')
end

function settingsFlowParameters_Callback(~,~,handles)

flow = getappdata(handles.LCSTool,'flow');
prompt = fieldnames(flow.parameters);
dlg_title = 'Flow parameters';
num_lines = 1;
number_of_parameters = length(prompt);
parameter_names = fieldnames(flow.parameters);
default_values_iterator = cell(number_of_parameters,1);
for m = 1:number_of_parameters
    default_values_iterator{m} ...
        = num2str(flow.parameters.(parameter_names{m}));
end

default_values = default_values_iterator;

options.WindowStyle = 'modal';
answer = inputdlg(prompt,dlg_title,num_lines,default_values,options);
if ~isempty(answer)
    for m = 1:number_of_parameters
        flow.parameters.(parameter_names{m}) = str2double(answer{m});
    end
end

setappdata(handles.LCSTool,'flow',flow)

function initialTime_Callback(hObject,~,handles)

set(hObject,'UserData',str2double(get(hObject,'String')));
flow = getappdata(handles.LCSTool,'flow');
flow = reset_flow(flow);
flow.initialTime = get(hObject,'UserData');
setappdata(handles.LCSTool,'flow',flow)
setappdata(handles.LCSTool,'strainline',...
    reset_strainline(getappdata(handles.LCSTool,'strainline')))

function finalTime_Callback(hObject,~,handles)

set(hObject,'UserData',str2double(get(hObject,'String')));
flow = getappdata(handles.LCSTool,'flow');
flow = reset_flow(flow);
flow.finalTime = get(hObject,'UserData');
setappdata(handles.LCSTool,'flow',flow)
setappdata(handles.LCSTool,'strainline',...
    reset_strainline(getappdata(handles.LCSTool,'strainline')))

function animationTimespan_Callback(hObject,~,handles)

set(hObject,'UserData',str2double(get(hObject,'String')));
flow = getappdata(handles.LCSTool,'flow');
flow.animationTimespan = get(hObject,'UserData');
setappdata(handles.LCSTool,'flow',flow)

function strainlineRes_Callback(hObject,~,handles)

set(hObject,'UserData',str2double(get(hObject,'String')));
strainline = getappdata(handles.LCSTool,'strainline');

switch get(hObject,'Tag')
    case 'strainlineResX'
        strainline = set_strainline_resolution(...
            [uint64(get(hObject,'UserData')) strainline.resolution(2)],...
            strainline);
    case 'strainlineResY'
        strainline = set_strainline_resolution(...
            [strainline.resolution(1) uint64(get(hObject,'UserData'))],...
            strainline);
    otherwise
        error('Unknown tag')
end

setappdata(handles.LCSTool,'strainline',strainline)

function shearlineRes_callback(hObject,~,handles)

input = uint64(str2double(get(hObject,'string')));

shearline = getappdata(handles.LCSTool,'shearline');

switch get(hObject,'Tag')
    case 'shearlineResX'
        shearline = set_shearline_resolution([input,...
            shearline.resolution(2)],shearline);
    case 'shearlineResY'
        shearline = set_shearline_resolution([shearline.resolution(1),...
            input],shearline);
    otherwise
        error('Unknown tag')
end

setappdata(handles.LCSTool,'shearline',shearline);

function strainlineFiltering_callback(hObject,~,handles)

set(hObject,'UserData',str2double(get(hObject,'String')));
strainline = getappdata(handles.LCSTool,'strainline');

switch get(hObject,'Tag')
    case 'maximumGeodesicDeviationThreshold'
        strainline = set_strainline_geodesic_deviation_tol(...
            get(hObject,'UserData'),strainline);
    case 'geodesicDeviationMinLength'
        strainline = set_strainline_length_tol(get(hObject,'UserData'),...
            strainline);
    case 'filteringDistance'
        strainline = set_strainline_hausdorff_distance(...
            get(hObject,'UserData'),strainline);
    otherwise
        error('Unrecognized filtering parameter.')
end

setappdata(handles.LCSTool,'strainline',strainline)

function edit_CreateFcn(hObject,~,~)

if ispc && isequal(get(hObject,'BackgroundColor'),...
        get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

function xMin_Callback(hObject,~,handles)

flow = getappdata(handles.LCSTool,'flow');
flow = reset_flow(flow);
flow.domain(1,1) = str2double(get(hObject,'String'));
set(handles.axesParticles,'XLim',flow.domain(1,:));
setappdata(handles.LCSTool,'flow',flow)
setappdata(handles.LCSTool,'strainline',...
    reset_strainline(getappdata(handles.LCSTool,'strainline')))

function xMax_Callback(hObject,~,handles)

flow = getappdata(handles.LCSTool,'flow');
flow = reset_flow(flow);
flow.domain(1,2) = str2double(get(hObject,'String'));
set(handles.axesParticles,'XLim',flow.domain(1,:))
setappdata(handles.LCSTool,'flow',flow)
setappdata(handles.LCSTool,'strainline',...
    reset_strainline(getappdata(handles.LCSTool,'strainline')))

function xResolution_Callback(hObject,~,handles)

data.flow = getappdata(handles.LCSTool,'flow');
data.shearline = getappdata(handles.LCSTool,'shearline');
data.strainline = getappdata(handles.LCSTool,'strainline');

resolution = [uint64(str2double(get(hObject,'String')))...
    data.flow.resolution(2)];
data = set_flow_resolution(resolution,data);

setappdata(handles.LCSTool,'flow',data.flow)
setappdata(handles.LCSTool,'strainline',data.strainline)
setappdata(handles.LCSTool,'shearline',data.shearline)

function yMin_Callback(hObject,~,handles)

flow = getappdata(handles.LCSTool,'flow');
flow = reset_flow(flow);
flow.domain(2,1) = str2double(get(hObject,'String'));
set(handles.axesParticles,'YLim',flow.domain(2,:));
setappdata(handles.LCSTool,'flow',flow)
setappdata(handles.LCSTool,'strainline',...
    reset_strainline(getappdata(handles.LCSTool,'strainline')))

function yMax_Callback(hObject,~,handles)

flow = getappdata(handles.LCSTool,'flow');
flow = reset_flow(flow);
flow.domain(2,2) = str2double(get(hObject,'String'));
set(handles.axesParticles,'YLim',flow.domain(2,:));
setappdata(handles.LCSTool,'flow',flow)
setappdata(handles.LCSTool,'strainline',...
    reset_strainline(getappdata(handles.LCSTool,'strainline')))

function yResolution_Callback(hObject,~,handles)

data.flow = getappdata(handles.LCSTool,'flow');
data.shearline = getappdata(handles.LCSTool,'shearline');
data.strainline = getappdata(handles.LCSTool,'strainline');

resolution = [data.flow.resolution(1) ...
    uint64(str2double(get(hObject,'String')))];
data = set_flow_resolution(resolution,data);

setappdata(handles.LCSTool,'flow',data.flow)
setappdata(handles.LCSTool,'strainline',data.strainline)
setappdata(handles.LCSTool,'shearline',data.shearline)

function integrationMethod_CreateFcn(hObject,~,~)
if ispc && isequal(get(hObject,'BackgroundColor'),...
        get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end
set(hObject,'Value',2)

function absTol_CreateFcn(hObject,~,~)
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

% FIXME Should set MATLAB's default value, 1e-6, "programatically"
defaultValue = 1e-6;
set_editText(hObject,defaultValue)

function absTol_Callback(hObject,~,~)
set(hObject,'UserData',str2double(get(hObject,'String')))

function relTol_CreateFcn(hObject,~,~)
if ispc && isequal(get(hObject,'BackgroundColor'),get(0,...
        'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white')
end
defaultValue = 1e-3;
set_editText(hObject,defaultValue)

function relTol_Callback(hObject,~,~)
set(hObject,'UserData',str2double(get(hObject,'String')))

function playButton_Callback(~,~,handles)

flow = getappdata(handles.LCSTool,'flow');

[pos_x,pos_y] = meshgrid(linspace(flow.domain(1,1),flow.domain(1,2),...
    flow.resolution(1)),linspace(flow.domain(2,1),flow.domain(2,2),...
    flow.resolution(2)));

initialPosition = [reshape(pos_x,prod(double(flow.resolution)),1),...
    reshape(pos_y,prod(double(flow.resolution)),1)];
clear('pos_x','pos_y')

initialPosition = to_coupled(initialPosition);

if isfield(flow,'parameters')
    flow_derivative = @(t,y)flow.derivative(t,y,flow.parameters);
elseif isfield(flow,'data')
    flow_derivative = @(t,y)flow.derivative(t,y,flow.data);
else
    flow_derivative = @(t,y)flow.derivative(t,y);
end

framesPerSecond = 20;
frameDelay = 1/framesPerSecond;

if flow.animationTimespan < frameDelay
    % FIXME If animation_time is much less than frames_per_second, solution
    % will be slowed down.
    timesteps = 2;
else
    timesteps = abs(round(flow.animationTimespan*framesPerSecond)) + 1;
end

physical_time = linspace(flow.timespan(1),flow.timespan(2),timesteps);

options = odeset('AbsTol',get(handles.absTol,'UserData'),...
    'RelTol',get(handles.relTol,'UserData'),...
    'OutputFcn',@(t,y,flag) ode_output_fcn(t,y,flag,handles,...
    frameDelay));
integrationMethods = get(handles.integrationMethod,'String');
integrationMethod = integrationMethods{get(handles.integrationMethod,...
    'Value')};
flow_solution = feval(integrationMethod,flow_derivative,physical_time,...
    initialPosition,options);

if ~flow.animationTimespan
    delete(get(handles.axesParticles,'children'))
    finalPosition = deval(flow_solution,finalTime);
    n = prod(flow.resolution);

    if isfield(flow,'periodicBc')
        position = impose_periodic_bc([finalPosition(1:n) ...
            finalPosition(n+1:end)],...
            flow.domain,flow.periodicBc);
        finalPosition(1:n) = position(:,1);
        finalPosition(n+1:end) = position(:,2);
    end

    plot(handles.axesParticles,finalPosition(1:n),finalPosition(n+1:end));
    set(get(handles.axesParticles,'children'),'LineStyle','none',...
        'Marker','o',...
        'MarkerEdgeColor','black',...
        'MarkerFaceColor','black')
end

function stopButton_Callback(hObject,~,handles)
set(handles.playButton,'UserData',0);
set(hObject,'Enable','Off')
guidata(hObject,handles);

function shearApplyButton_callback(~,~,handles)

hWaitbar = waitbar(0,'Shearline LCS Calculations','visible','off');
center_waitbar(hWaitbar,handles.LCSTool)
set(hWaitbar,'visible','on')

delete(get(handles.shearlineAxes,'Children'))
drawnow

flow = getappdata(handles.LCSTool,'flow');
shearline = getappdata(handles.LCSTool,'shearline');

[flow,shearline] = compute_shear_lcs(flow,shearline);

% Adjust <d_g> tolerances, if necessary.
if shearline.averageGeodesicDeviationPosTol < ...
        min(shearline.averageGeodesicDeviationPos)
    shearline.averageGeodesicDeviationPosTol = ...
        min(shearline.averageGeodesicDeviationPos);
    set(handles.shearAverageGeodesicDeviationPosTol,'string',...
        num2str(shearline.averageGeodesicDeviationPosTol))
end
if shearline.averageGeodesicDeviationPosTol > ...
        max(shearline.averageGeodesicDeviationPos)
    shearline.averageGeodesicDeviationPosTol = ...
        max(shearline.averageGeodesicDeviationPos);
    set(handles.shearAverageGeodesicDeviationPosTol,'string',...
        num2str(shearline.averageGeodesicDeviationPosTol))
end
if shearline.averageGeodesicDeviationNegTol < ...
        min(shearline.averageGeodesicDeviationNeg)
    shearline.averageGeodesicDeviationNegTol = ...
        min(shearline.averageGeodesicDeviationNeg);
    set(handles.shearAverageGeodesicDeviationNegTol,'string',...
        num2str(shearline.averageGeodesicDeviationNegTol))
end
if shearline.averageGeodesicDeviationNegTol > ...
        max(shearline.averageGeodesicDeviationNeg)
    shearline.averageGeodesicDeviationNegTol = ...
        max(shearline.averageGeodesicDeviationNeg);
    set(handles.shearAverageGeodesicDeviationNegTol,'string',...
        num2str(shearline.averageGeodesicDeviationNegTol))
end

[flow,shearline] = compute_shear_lcs(flow,shearline);

setappdata(handles.LCSTool,'flow',flow);
setappdata(handles.LCSTool,'shearline',shearline);

shearlineShowPlot = getappdata(handles.LCSTool,'shearlineShowPlot');
plot_shear_lcs(handles.shearlineAxes,flow,shearline,shearlineShowPlot)

close(hWaitbar)

function strainApplyButton_callback(~,~,handles)

hWaitbar = waitbar(0,'Strainline LCS Calculations','visible','off');
center_waitbar(hWaitbar,handles.LCSTool)
set(hWaitbar,'visible','on')

delete(get(handles.strainlineAxes,'Children'))
drawnow

flow = getappdata(handles.LCSTool,'flow');
strainline = getappdata(handles.LCSTool,'strainline');

[flow,strainline] = compute_strain_lcs(flow,strainline);

setappdata(handles.LCSTool,'flow',flow);
setappdata(handles.LCSTool,'strainline',strainline);

strainlineShowPlot = getappdata(handles.LCSTool,'strainlineShowPlot');
plot_strain_lcs(handles.strainlineAxes,flow,strainline,strainlineShowPlot)

close(hWaitbar)

function initialize_axes(axes,domain)
set(axes,'nextplot','add',...
    'DataAspectRatio',[1 1 1],...
    'DataAspectRatioMode','Manual',...
    'box','on',...
    'xgrid','on',...
    'ygrid','on',...
    'xlim',[domain(1,1) domain(1,2)],...
    'ylim',[domain(2,1) domain(2,2)])
set(get(axes,'xlabel'),'string','x')
set(get(axes,'ylabel'),'string','y')

function initialize_strainline_axes(handles)

flow = getappdata(handles.LCSTool,'flow');
strainline = getappdata(handles.LCSTool,'strainline');

showPlot.strainlineFiltered = true;
setappdata(handles.LCSTool,'strainlineShowPlot',showPlot)

initialize_axes(handles.strainlineAxes,flow.domain)

plot_strain_lcs(handles.strainlineAxes,flow,strainline,showPlot)

function initialize_shearline_axes(handles)

flow = getappdata(handles.LCSTool,'flow');
shearline = getappdata(handles.LCSTool,'shearline');

showPlot.shearlinePosFiltered = true;
showPlot.shearlineNegFiltered = true;
setappdata(handles.LCSTool,'shearlineShowPlot',showPlot)

initialize_axes(handles.shearlineAxes,flow.domain)

plot_shear_lcs(handles.shearlineAxes,flow,shearline,showPlot)

function set_editText(object,value)
set(object,'String',num2str(value))
set(object,'UserData',value)

function loadInputFile(InputFileName,InputFilePath,handles)

input = load_input_file(fullfile(InputFilePath,InputFileName));
flow = set_flow_default(input.flow);
shearline = input.shearline;
strainline = input.strainline;
clear('input')

if isfield(flow,'name')
    set(handles.LCSTool,'Name',['LCS Tool: ',flow.name])
else
    set(handles.LCSTool,'Name',['LCS Tool: ',InputFileName])
end

set_editText(handles.initialTime,flow.timespan(1))
set_editText(handles.finalTime,flow.timespan(2))
if ~isfield(flow,'animationTimespan')
    flow.animationTimespan = abs(diff(flow.timespan));
end
set_editText(handles.animationTimespan,flow.animationTimespan)
set_editText(handles.xResolution,flow.resolution(1))
set_editText(handles.yResolution,flow.resolution(2))

set(handles.xMin,'String',num2str(flow.domain(1,1)))
set(handles.xMax,'String',num2str(flow.domain(1,2)))
set(handles.yMin,'String',num2str(flow.domain(2,1)))
set(handles.yMax,'String',num2str(flow.domain(2,2)))

set_editText(handles.strainlineResX,strainline.resolution(1))
set_editText(handles.strainlineResY,strainline.resolution(2))
if ~isfield(strainline,'fixedPointScaling')
    strainline.fixedPointScaling = false;
end
set_editText(handles.maximumGeodesicDeviationThreshold,...
    strainline.geodesicDeviationTol)
set_editText(handles.geodesicDeviationMinLength,strainline.lengthTol)
set_editText(handles.filteringDistance,strainline.filteringDistanceTol)

set_editText(handles.shearlineResX,shearline.resolution(1))
set_editText(handles.shearlineResY,shearline.resolution(2))

setappdata(handles.LCSTool,'flow',flow);
setappdata(handles.LCSTool,'shearline',shearline);
setappdata(handles.LCSTool,'strainline',strainline);

if isfield(shearline,'averageGeodesicDeviationPos')
    set(handles.shearAverageGeodesicDeviationPosTol,'string',...
        num2str(shearline.averageGeodesicDeviationPosTol))
    shearAverageGeodesicDeviationPosTol_callback(...
        handles.shearAverageGeodesicDeviationPosTol,[],handles)
end

if isfield(shearline,'averageGeodesicDeviationNeg')
    set(handles.shearAverageGeodesicDeviationNegTol,'string',...
        num2str(shearline.averageGeodesicDeviationNegTol))
    shearAverageGeodesicDeviationNegTol_callback(...
        handles.shearAverageGeodesicDeviationNegTol,[],handles)
end

initialize_axes(handles.axesParticles,flow.domain)
set(handles.axesParticles,'Visible','on')

initialize_strainline_axes(handles)
set(handles.strainlineAxes,'Visible','on')

initialize_shearline_axes(handles)
set(handles.shearlineAxes,'Visible','on')

function lcsToolFigure = lcs_tool_LayoutFcn(policy)

persistent hsingleton;

if strcmpi(policy,'reuse') && isa(hsingleton,'handle')
    lcsToolFigure = hsingleton;
    return;
end

appdata = [];
appdata.GUIDEOptions = struct(...
    'active_h',[], ...
    'taginfo',struct(...
    'figure',2, ...
    'axes',2,...
    'edit',14,...
    'text',21,...
    'togglebutton',2,...
    'pushbutton',3,...
    'checkbox',2,...
    'uipanel',4,...
    'popupmenu',2),...
    'override',0,...
    'release',13,...
    'resize','none',...
    'accessibility','callback',...
    'mfile',[],...
    'callbacks',[],...
    'singleton',[],...
    'syscolorfig',[],...
    'blocking',0);
appdata.lastValidTag = 'figure1';
appdata.GUIDELayoutEditor = [];
appdata.initTags = struct('handle',[],'tag','figure1');

lcsToolFigure = figure(...
    'Units','characters',...
    'Position',[104 24 140 38],...
    'Color',[0.7 0.7 0.7],...
    'IntegerHandle','off',...
    'InvertHardcopy',get(0,'defaultfigureInvertHardcopy'),...
    'MenuBar','none',...
    'Name','lcs_tool',...
    'NumberTitle','off',...
    'PaperPosition',get(0,'defaultfigurePaperPosition'),...
    'Resize','off',...
    'HandleVisibility','callback',...
    'UserData',[],...
    'Tag','LCSTool',...
    'CreateFcn',{@local_CreateFcn,blanks(0),appdata});

appdata = [];
appdata.lastValidTag = 'uipanelTime';

warning('off','MATLAB:uitabgroup:OldVersion')

h11 = uitabgroup('Parent',lcsToolFigure);

particleTab = uitab('parent',h11,'title','Trajectories');
strainlineTab = uitab('parent',h11,'title','Strainlines');
shearlineTab = uitab('parent',h11,'title','Shearlines');

set(h11,'SelectedTab',shearlineTab)

timePanel = uipanel('Parent',particleTab,...
    'Units','characters',...
    'Position',[115.8 27.6 20 8.2],...
    'Title','Time',...
    'Tag','uipanelTime',...
    'Clipping','on',...
    'CreateFcn',{@local_CreateFcn,blanks(0),appdata});

uicontrol('Parent',timePanel,...
    'Style','edit',...
    'Tag','initialTime',...
    'Units','characters',...
    'Position',[11 4.9 7 1.5],...
    'BackgroundColor','white',...
    'String',blanks(0),...
    'CreateFcn',{@local_CreateFcn,@(hObject,eventdata)edit_CreateFcn(...
    hObject,eventdata,guidata(hObject)),appdata},...
    'Callback',@(hObject,eventdata)initialTime_Callback(hObject,...
    eventdata,guidata(hObject)))

uicontrol('Parent',timePanel,...
    'Style','edit',...
    'Tag','finalTime',...
    'Units','characters',...
    'Position',[11 2.9 7 1.5],...
    'BackgroundColor','white',...
    'String',blanks(0),...
    'CreateFcn',{@local_CreateFcn,@(hObject,eventdata)edit_CreateFcn(...
    hObject,eventdata,guidata(hObject)),appdata},...
    'Callback',@(hObject,eventdata)finalTime_Callback(hObject,eventdata,...
    guidata(hObject)));

uicontrol('Parent',timePanel,...
    'Units','characters',...
    'Position',[1.7 2.9 8.5 1.5],...
    'String','Final',...
    'Style','text',...
    'Tag','textFinalTime',...
    'CreateFcn',{@local_CreateFcn,blanks(0),appdata});

appdata = [];
appdata.lastValidTag = 'textInitialTime';

uicontrol('Parent',timePanel,...
    'Style','text',...
    'Tag','textInitialTime',...
    'Units','characters',...
    'Position',[1.7 4.9 8.5 1.5],...
    'String','Initial',...
    'CreateFcn',{@local_CreateFcn,blanks(0),appdata});

appdata = [];
appdata.lastValidTag = 'animationTimespan';

uicontrol('Parent',timePanel,...
    'Style','edit',...
    'Tag','animationTimespan',...
    'Units','characters',...
    'BackgroundColor','white',...
    'Position',[11.2 0.6 7 1.5],...
    'String',blanks(0),...
    'CreateFcn',{@local_CreateFcn,@(hObject,eventdata)edit_CreateFcn(hObject,eventdata,guidata(hObject)),appdata},...
    'Callback',@(hObject,eventdata)animationTimespan_Callback(hObject,eventdata,guidata(hObject)));

appdata = [];
appdata.lastValidTag = 'textAnim';

uicontrol('Parent',timePanel,...
    'Units','characters',...
    'Position',[1.3 0.8 9 1.5],...
    'String','Anim. t.',...
    'Style','text',...
    'Tag','textAnim',...
    'CreateFcn',{@local_CreateFcn, blanks(0), appdata});

appdata = [];
appdata.lastValidTag = 'fileMenu';

h9 = uimenu('Parent',lcsToolFigure,...
    'Callback',@(hObject,eventdata) fileMenu_Callback(hObject,eventdata,guidata(hObject)),...
    'Label','&File',...
    'Tag','fileMenu',...
    'CreateFcn',{@local_CreateFcn, blanks(0), appdata});

appdata = [];
appdata.lastValidTag = 'fileOpen';

uimenu('Parent',h9,...
    'Accelerator','O',...
    'Callback',@(hObject,eventdata) fileOpen_Callback(hObject,eventdata,guidata(hObject)),...
    'Label','&Open...',...
    'Tag','fileOpen',...
    'CreateFcn',{@local_CreateFcn, blanks(0), appdata});

appdata = [];
appdata.lastValidTag = 'fileClose';

uimenu('Parent',h9,...
    'Accelerator','Q',...
    'Callback',@(hObject,eventdata) fileClose_Callback(hObject,eventdata,guidata(hObject)),...
    'Label','&Exit',...
    'Tag','fileClose',...
    'CreateFcn',{@local_CreateFcn, blanks(0), appdata});

appdata = [];
appdata.lastValidTag = 'uipanelSpace';

spacePanel = uipanel(...
    'Parent',particleTab,...
    'Units','characters',...
    'Title','Space',...
    'Tag','uipanelSpace',...
    'Clipping','on',...
    'Position',[115.8 12.2 20 15],...
    'CreateFcn',{@local_CreateFcn, blanks(0), appdata});

appdata = [];
appdata.lastValidTag = 'xMin';

uicontrol('Parent',spacePanel,...
    'Style','edit',...
    'Tag','xMin',...
    'Units','characters',...
    'Position',[11 11.1 7 1.5],...
    'BackgroundColor','white',...
    'String',blanks(0),...
    'CreateFcn',{@local_CreateFcn,@(hObject,eventdata)edit_CreateFcn(hObject,eventdata,guidata(hObject)),appdata},...
    'Callback',@(hObject,eventdata) xMin_Callback(hObject,eventdata,guidata(hObject)));

appdata = [];
appdata.lastValidTag = 'xMax';

uicontrol('Parent',spacePanel,...
    'Style','edit',...
    'Tag','xMax',...
    'Units','characters',...
    'Position',[11 9.1 7 1.5],...
    'BackgroundColor','white',...
    'String',blanks(0),...
    'CreateFcn',{@local_CreateFcn,@(hObject,eventdata)edit_CreateFcn(hObject,eventdata,guidata(hObject)),appdata},...
    'Callback',@(hObject,eventdata)xMax_Callback(hObject,eventdata,guidata(hObject)));

appdata = [];
appdata.lastValidTag = 'xResolution';

uicontrol('Parent',spacePanel,...
    'Units','characters',...
    'BackgroundColor','white',...
    'Callback',@(hObject,eventdata)xResolution_Callback(hObject,eventdata,guidata(hObject)),...
    'CData',[],...
    'Position',[11 7 7 1.5],...
    'Style','edit',...
    'CreateFcn',{@local_CreateFcn,@(hObject,eventdata)edit_CreateFcn(hObject,eventdata,guidata(hObject)),appdata},...
    'UserData',[],...
    'Tag','xResolution');

appdata = [];
appdata.lastValidTag = 'yMin';

uicontrol(...
    'Parent',spacePanel,...
    'Units','characters',...
    'BackgroundColor','white',...
    'Callback',@(hObject,eventdata)yMin_Callback(hObject,eventdata,guidata(hObject)),...
    'Position',[11 4.8 7 1.5],...
    'String',blanks(0),...
    'Style','edit',...
    'CreateFcn',{@local_CreateFcn,@(hObject,eventdata)edit_CreateFcn(hObject,eventdata,guidata(hObject)),appdata},...
    'Tag','yMin');

appdata = [];
appdata.lastValidTag = 'yMax';

uicontrol('Parent',spacePanel,...
    'Style','edit',...
    'Tag','yMax',...
    'Units','characters',...
    'Position',[11 2.7 7 1.5],...
    'String',blanks(0),...
    'BackgroundColor','white',...
    'CreateFcn',{@local_CreateFcn,@(hObject,eventdata)edit_CreateFcn(hObject,eventdata,guidata(hObject)),appdata},...
    'Callback',@(hObject,eventdata)yMax_Callback(hObject,eventdata,guidata(hObject)));

appdata = [];
appdata.lastValidTag = 'yResolution';

uicontrol('Parent',spacePanel,...
    'Units','characters',...
    'BackgroundColor','white',...
    'Callback',@(hObject,eventdata)yResolution_Callback(hObject,eventdata,guidata(hObject)),...
    'Position',[11 0.6 7 1.5],...
    'String',blanks(0),...
    'Style','edit',...
    'CreateFcn',{@local_CreateFcn,@(hObject,eventdata)edit_CreateFcn(hObject,eventdata,guidata(hObject)),appdata},...
    'Tag','yResolution');

appdata = [];
appdata.lastValidTag = 'textXMin';

uicontrol('Parent',spacePanel,...
    'Units','characters',...
    'Position',[4.5 11.2 5.5 1.3],...
    'String','min.',...
    'Style','text',...
    'Tag','textXMin',...
    'CreateFcn',{@local_CreateFcn,blanks(0),appdata});

appdata = [];
appdata.lastValidTag = 'textXMax';

uicontrol('Parent',spacePanel,...
    'Units','characters',...
    'Position',[4.5 9.3 5.5 1.3],...
    'String','max.',...
    'Style','text',...
    'Tag','textXMax',...
    'CreateFcn',{@local_CreateFcn,blanks(0),appdata});

appdata = [];
appdata.lastValidTag = 'textXResolution';

uicontrol('Parent',spacePanel,...
    'Units','characters',...
    'Position',[4.5 7.2 5.5 1.3],...
    'String','res.',...
    'Style','text',...
    'Tag','textXResolution',...
    'CreateFcn',{@local_CreateFcn,blanks(0),appdata});

appdata = [];
appdata.lastValidTag = 'textYMin';

uicontrol('Parent',spacePanel,...
    'Units','characters',...
    'Position',[4.5 5 5.5 1.3],...
    'String','min.',...
    'Style','text',...
    'Tag','textYMin',...
    'CreateFcn',{@local_CreateFcn,blanks(0),appdata});

appdata = [];
appdata.lastValidTag = 'textYMax';

uicontrol('Parent',spacePanel,...
    'Units','characters',...
    'Position',[4.5 2.9 5.5 1.3],...
    'String','max.',...
    'Style','text',...
    'Tag','textYMax',...
    'CreateFcn',{@local_CreateFcn,blanks(0),appdata});

appdata = [];
appdata.lastValidTag = 'textYResolution';

uicontrol('Parent',spacePanel,...
    'Units','characters',...
    'Position',[4.5 0.74 5.5 1.3],...
    'String','res.',...
    'Style','text',...
    'Tag','textYResolution',...
    'CreateFcn',{@local_CreateFcn, blanks(0), appdata});

appdata = [];
appdata.lastValidTag = 'textX';

uicontrol('Parent',spacePanel,...
    'Units','characters',...
    'Position',[1.2 11.5 3 1.5],...
    'String','x',...
    'Style','text',...
    'Tag','textX',...
    'CreateFcn',{@local_CreateFcn, blanks(0), appdata});

appdata = [];
appdata.lastValidTag = 'textY';

uicontrol(...
    'Parent',spacePanel,...
    'Units','characters',...
    'Position',[1.2 5.6 3 1.5],...
    'String','y',...
    'Style','text',...
    'Tag','textY',...
    'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'uipanelIntegration';

h31 = uipanel(...
    'Parent',particleTab,...
    'Units','characters',...
    'Title','Integration',...
    'Tag','uipanelIntegration',...
    'Clipping','on',...
    'Position',[115.8 3.4 20 8.6],...
    'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'integrationMethod';

uicontrol(...
    'Parent',h31,...
    'Units','characters',...
    'Position',[3.3 4.4 14.8 1.5],...
    'String',{  'ode23'; 'ode45'; 'ode113' },...
    'Style','popupmenu',...
    'Value',2,...
    'CreateFcn',{@local_CreateFcn,@(hObject,eventdata)...
    integrationMethod_CreateFcn(hObject,eventdata,guidata(hObject)),...
    appdata},...
    'Tag','integrationMethod');

appdata = [];
appdata.lastValidTag = 'textIntegrationMethod';

uicontrol('Parent',h31,...
    'Units','characters',...
    'Position',[1.8 6.3 8.7 0.9],...
    'String','Method',...
    'Style','text',...
    'Tag','textIntegrationMethod',...
    'CreateFcn',{@local_CreateFcn, blanks(0), appdata});

appdata = [];
appdata.lastValidTag = 'absTol';

uicontrol('Parent',h31,...
    'Units','characters',...
    'Position',[11 2.4 7 1.5],...
    'BackgroundColor','white',...
    'Callback',@(hObject,eventdata) absTol_Callback(hObject,eventdata,guidata(hObject)),...
    'String','1e-06',...
    'Style','edit',...
    'CreateFcn',{@local_CreateFcn,@(hObject,eventdata)absTol_CreateFcn(...
    hObject,eventdata,guidata(hObject)),appdata},...
    'UserData',1e-06,...
    'Tag','absTol');

appdata = [];
appdata.lastValidTag = 'relTol';

uicontrol('Parent',h31,...
    'Units','characters',...
    'BackgroundColor','white',...
    'CreateFcn',{@local_CreateFcn,@(hObject,eventdata)relTol_CreateFcn(...
    hObject,eventdata,guidata(hObject)),appdata},...
    'Callback',@(hObject,eventdata)relTol_Callback(hObject,eventdata,...
    guidata(hObject)),...
    'Position',[11 0.35 7 1.5],...
    'String','0.001',...
    'Style','edit',...
    'UserData',0.001,...
    'Tag','relTol');

appdata = [];
appdata.lastValidTag = 'textAbsTol';

uicontrol(...
    'Parent',h31,...
    'Units','characters',...
    'Position',[1.7 2.6 8.7 0.9],...
    'String','AbsTol',...
    'Style','text',...
    'Tag','textAbsTol',...
    'CreateFcn',{@local_CreateFcn,blanks(0),appdata});

appdata = [];
appdata.lastValidTag = 'textRelTol';

uicontrol('Parent',h31,...
    'Units','characters',...
    'Position',[2 0.6 8.7 0.9],...
    'String','RelTol',...
    'Style','text',...
    'Tag','textRelTol',...
    'CreateFcn',{@local_CreateFcn,blanks(0),appdata});

appdata = [];
appdata.lastValidTag = 'playButton';

uicontrol('Parent',particleTab,...
    'Units','characters',...
    'Callback',@(hObject,eventdata) playButton_Callback(hObject,eventdata,guidata(hObject)),...
    'Enable','off',...
    'Position',[113 1.214 12 1.785],...
    'String','Play',...
    'Tag','playButton');

appdata = [];
appdata.lastValidTag = 'stopButton';

uicontrol('Parent',particleTab,...
    'Units','characters',...
    'Callback',@(hObject,eventdata) stopButton_Callback(hObject,eventdata,guidata(hObject)),...
    'Enable','off',...
    'Position',[126.166 1.214 12 1.785],...
    'String','Stop',...
    'Tag','stopButton');

appdata = [];
appdata.lastValidTag = 'axesParticles';

axes('Parent',particleTab,...
    'Tag','axesParticles',...
    'Units','characters',...
    'Position',[8 3.664 101.8 30.769],...
    'CameraPosition',[0.5 0.5 9.1],...
    'CameraPositionMode',get(0,'defaultaxesCameraPositionMode'),...
    'Color',get(0,'defaultaxesColor'),...
    'ColorOrder',get(0,'defaultaxesColorOrder'),...
    'LooseInset',[14.56 3.57 10.64 2.425],...
    'XColor',get(0,'defaultaxesXColor'),...
    'YColor',get(0,'defaultaxesYColor'),...
    'ZColor',get(0,'defaultaxesZColor'),...
    'Visible','off');

axes('Parent',strainlineTab,...
    'Tag','strainlineAxes',...
    'Units','characters',...
    'Position',[8 3.6 101.8 30.8],...
    'CameraPosition',[0.5 0.5 9.1],...
    'CameraPositionMode',get(0,'defaultaxesCameraPositionMode'),...
    'Color',get(0,'defaultaxesColor'),...
    'ColorOrder',get(0,'defaultaxesColorOrder'),...
    'LooseInset',[14.56 3.5 10.64 2.425],...
    'XColor',get(0,'defaultaxesXColor'),...
    'YColor',get(0,'defaultaxesYColor'),...
    'ZColor',get(0,'defaultaxesZColor'),...
    'Visible','off');

axes('Parent',shearlineTab,...
    'Tag','shearlineAxes',...
    'Units','characters',...
    'Position',[8 3.6 101.8 30.8],...
    'CameraPosition',[0.5 0.5 9.1],...
    'CameraPositionMode',get(0,'defaultaxesCameraPositionMode'),...
    'Color',get(0,'defaultaxesColor'),...
    'ColorOrder',get(0,'defaultaxesColorOrder'),...
    'LooseInset',[14.56 3.5 10.64 2.425],...
    'XColor',get(0,'defaultaxesXColor'),...
    'YColor',get(0,'defaultaxesYColor'),...
    'ZColor',get(0,'defaultaxesZColor'),...
    'Visible','off');

uicontrol('Parent',strainlineTab,...
    'Style','checkbox',...
    'Units','characters',...
    'Position',[114 34 17 1.5],...
    'String','Display FTLE',...
    'Callback',@(hObject,eventdata)FTLEDisplayCheckbox_Callback(hObject,eventdata,guidata(hObject)),...
    'Max',1,...
    'Value',1,...
    'Tag','FTLEDisplayCheckbox',...
    'Enable','off')

strainlinePanel_height = 17;

strainlinePanel = uipanel(...
    'Parent',strainlineTab,...
    'Title','Strainlines',...
    'Tag','uipanelStrainlines',...
    'Clipping','on',...
    'Units','characters',...
    'Position',[113 17 22 strainlinePanel_height],...
    'CreateFcn',{@local_CreateFcn,blanks(0),appdata});

uicontrol('Parent',strainlinePanel,...
    'Style','checkbox',...
    'Units','characters',...
    'Position',[1 strainlinePanel_height-6 15 1.2],...
    'String','Display all',...
    'Max',1,...
    'Value',0,...
    'Tag','strainlineDisplayCheckbox',...
    'Enable','off',...
    'Callback',@(hObject,eventdata)strainlineDisplayCheckbox_Callback(hObject,eventdata,guidata(hObject)))

uicontrol('Parent',strainlinePanel,...
    'Style','checkbox',...
    'Units','characters',...
    'Position',[1 strainlinePanel_height-8 15 1.2],...
    'String','Display IC',...
    'Max',1,...
    'Value',0,...
    'Tag','strainlineDisplayIcChecbox',...
    'Enable','off',...
    'Callback',@(hObject,eventdata)strainlineDisplayIcChecbox_Callback(...
    hObject,eventdata,guidata(hObject)))

uicontrol('Parent',strainlinePanel,...
    'Style','text',....
    'Units','characters',...
    'Position',[1 strainlinePanel_height-3 12 1.2],...
    'String','Resolution')

uicontrol('Parent',strainlinePanel,...
    'Style','text',....
    'Units','characters',...
    'Position',[1 strainlinePanel_height-4.5 2 1.2],...
    'String','x')

uicontrol('Parent',strainlinePanel,...
    'Style','edit',...
    'Tag','strainlineResX',...
    'Units','characters',...
    'Position',[3 strainlinePanel_height-4.5 7 1.5],...
    'BackgroundColor','white',...
    'String',blanks(0),...
    'Enable','off',...
    'CreateFcn',{@local_CreateFcn,@(hObject,eventdata)edit_CreateFcn(...
    hObject,eventdata,guidata(hObject)),appdata},...
    'Callback',@(hObject,eventdata)strainlineRes_Callback(hObject,...
    eventdata,guidata(hObject)))

uicontrol('Parent',strainlinePanel,...
    'Style','text',....
    'Units','characters',...
    'Position',[10.5 strainlinePanel_height-4.5 2 1.2],...
    'String','y')

uicontrol('Parent',strainlinePanel,...
    'Style','edit',...
    'Units','characters',...
    'Position',[12.5 strainlinePanel_height-4.5 7 1.5],...
    'BackgroundColor','white',...
    'String',blanks(0),...
    'Tag','strainlineResY',...
    'Enable','off',...
    'CreateFcn',{@local_CreateFcn,@(hObject,eventdata)edit_CreateFcn(hObject,eventdata,guidata(hObject)), appdata},...
    'Callback',@(hObject,eventdata)strainlineRes_Callback(hObject,eventdata,guidata(hObject)))

uicontrol('Parent',strainlinePanel,...
    'Style','checkbox',...
    'Units','characters',...
    'Position',[1 strainlinePanel_height-10 20 1.2],...
    'String','Display filtered',...
    'Max',1,...
    'Value',1,...
    'Tag','strainlineFilteredDisplayCheckbox',...
    'Enable','off',...
    'Callback',@(hObject,eventdata) strainlineFilteredDisplayCheckbox_Callback(hObject,eventdata,guidata(hObject)))

uicontrol('Parent',strainlinePanel,...
    'Style','text',...
    'Units','characters',...
    'Position',[1 strainlinePanel_height-12 10 1.2],...
    'String','max. d_g')

uicontrol('Parent',strainlinePanel,...
    'Style','edit',...
    'Units','characters',...
    'Position',[12.5 strainlinePanel_height-12 7 1.5],...
    'BackgroundColor','white',...
    'String',blanks(0),...
    'Tag','maximumGeodesicDeviationThreshold',...
    'Enable','off',...
    'CreateFcn',{@local_CreateFcn,@(hObject,eventdata)edit_CreateFcn(...
    hObject,eventdata,guidata(hObject)),appdata},...
    'Callback',@(hObject,eventdata)strainlineFiltering_callback(hObject,...
    eventdata,guidata(hObject)))

uicontrol('Parent',strainlinePanel,...
    'Style','text',...
    'Units','characters',...
    'Position',[1 strainlinePanel_height-14 12 1.2],...
    'String','min. len.')

uicontrol('Parent',strainlinePanel,...
    'Style','edit',...
    'Units','characters',...
    'Position',[12.5 strainlinePanel_height-14 7 1.5],...
    'BackgroundColor','white',...
    'String',blanks(0),...
    'Tag','geodesicDeviationMinLength',...
    'Enable','off',...
    'CreateFcn',{@local_CreateFcn,@(hObject,eventdata)edit_CreateFcn(...
    hObject,eventdata,guidata(hObject)),appdata},...
    'Callback',@(hObject,eventdata)strainlineFiltering_callback(hObject,...
    eventdata,guidata(hObject)))

uicontrol('Parent',strainlinePanel,...
    'Style','text',...
    'Units','characters',...
    'Position',[1 strainlinePanel_height-16 12 1.2],...
    'String','distance')

uicontrol('Parent',strainlinePanel,...
    'Style','edit',...
    'Units','characters',...
    'Position',[12.5 strainlinePanel_height-16 7 1.5],...
    'BackgroundColor','white',...
    'String',blanks(0),...
    'Enable','off',...
    'Tag','filteringDistance',...
    'CreateFcn',{@local_CreateFcn,@(hObject,eventdata)edit_CreateFcn(...
    hObject,eventdata,guidata(hObject)),appdata},...
    'Callback',@(hObject,eventdata)strainlineFiltering_callback(hObject,...
    eventdata,guidata(hObject)))

uicontrol('Parent',strainlineTab,...
    'Units','characters',...
    'Position',[120 1.2 12 1.8],...
    'Enable','off',...
    'String','Apply',...
    'Tag','applyButton',...
    'Callback',@(hObject,eventdata)strainApplyButton_callback(hObject,...
    eventdata,guidata(hObject)));

uicontrol('Parent',shearlineTab,...
    'Units','characters',...
    'Position',[120 1.2 12 1.8],...
    'Enable','off',...
    'String','Apply',...
    'Tag','shearApplyButton',...
    'Callback',@(hObject,eventdata)shearApplyButton_callback(hObject,...
    eventdata,guidata(hObject)));

posLeft = 114;
posBot = 34;
posHeight = 1.5;
vertSpace = 2;

uicontrol('parent',shearlineTab,...
    'style','text',...
    'units','characters',...
    'position',[posLeft posBot 12 posHeight],...
    'string','Resolution')

posBot = posBot - vertSpace;

uicontrol('parent',shearlineTab,...
    'style','text',....
    'units','characters',...
    'position',[posLeft posBot 2 posHeight],...
    'string','x')

uicontrol('parent',shearlineTab,...
    'style','edit',...
    'tag','shearlineResX',...
    'units','characters',...
    'position',[posLeft+3 posBot+.2 7 posHeight],...
    'backgroundColor','white',...
    'string',blanks(0),...
    'enable','off',...
    'createFcn',{@local_CreateFcn,@(hObject,eventdata)edit_CreateFcn(...
    hObject,eventdata,guidata(hObject)),appdata},...
    'callback',@(hObject,eventdata)shearlineRes_callback(hObject,...
    eventdata,guidata(hObject)))

uicontrol('parent',shearlineTab,...
    'style','text',....
    'units','characters',...
    'position',[posLeft+11 posBot 2 posHeight],...
    'string','y')

uicontrol('parent',shearlineTab,...
    'style','edit',...
    'tag','shearlineResY',...
    'units','characters',...
    'position',[posLeft+14 posBot+.2 7 posHeight],...
    'backgroundColor','white',...
    'string',blanks(0),...
    'enable','off',...
    'createFcn',{@local_CreateFcn,@(hObject,eventdata)edit_CreateFcn(...
    hObject,eventdata,guidata(hObject)),appdata},...
    'callback',@(hObject,eventdata)shearlineRes_callback(hObject,...
    eventdata,guidata(hObject)))

posBot = posBot - vertSpace;

uicontrol('Parent',shearlineTab,...
    'Style','checkbox',...
    'Units','characters',...
    'Position',[posLeft posBot 17 posHeight],...
    'String','Display IC',...
    'Callback',@(hObject,eventdata)shearlineDisplayIcCheckbox_callback(...
    hObject,eventdata,guidata(hObject)),...
    'Max',1,...
    'Value',0,...
    'Tag','shearlineDisplayIcCheckbox',...
    'Enable','off')

posBot = posBot - vertSpace;

uicontrol('Parent',shearlineTab,...
    'Style','checkbox',...
    'Units','characters',...
    'Position',[posLeft posBot 17 posHeight],...
    'String','eta+ quiver',...
    'Callback',@(hObject,eventdata)etaPosQuiverCheckbox_callback(hObject,...
    eventdata,guidata(hObject)),...
    'Max',1,...
    'Value',0,...
    'Tag','etaPosQuiverCheckbox',...
    'Enable','off')

posBot = posBot - vertSpace;

uicontrol('Parent',shearlineTab,...
    'Style','checkbox',...
    'Units','characters',...
    'Position',[posLeft posBot 17 posHeight],...
    'String','eta- quiver',...
    'Callback',@(hObject,eventdata)etaNegQuiverCheckbox_callback(hObject,...
    eventdata,guidata(hObject)),...
    'Max',1,...
    'Value',0,...
    'Tag','etaNegQuiverCheckbox',...
    'Enable','off')

posBot = posBot - vertSpace;

uicontrol('parent',shearlineTab,...
    'style','checkbox',...
    'units','characters',...
    'position',[posLeft posBot 10 posHeight],...
    'string','LCS+',...
    'callback',@(hObject,eventdata)shearLcsPosCheckbox_callback(hObject,...
    eventdata,guidata(hObject)),...
    'max',1,...
    'value',1,...
    'tag','shearLcsPosCheckbox',...
    'enable','off')

posBot = posBot - vertSpace;

uicontrol('parent',shearlineTab,...
    'style','text',...
    'units','characters',...
    'position',[posLeft-1 posBot 12 posHeight],...
    'string','<d_g> tol.')

uicontrol('parent',shearlineTab,...
    'style','edit',...
    'units','characters',...
    'position',[posLeft+11 posBot+.2 7 posHeight],...
    'backgroundcolor','white',...
    'string',blanks(0),...
    'tag','shearAverageGeodesicDeviationPosTol',...
    'enable','off',...
    'createFcn',{@local_CreateFcn,@(hObject,eventdata)edit_CreateFcn(...
    hObject,eventdata,guidata(hObject)),appdata},...
    'callback',@(hObject,eventdata)...
    shearAverageGeodesicDeviationPosTol_callback(hObject,eventdata,...
    guidata(hObject)))

posBot = posBot - vertSpace;

uicontrol('parent',shearlineTab,...
    'style','checkbox',...
    'units','characters',...
    'position',[posLeft posBot 10 posHeight],...
    'string','LCS-',...
    'callback',@(hObject,eventdata)shearLcsNegCheckbox_callback(hObject,...
    eventdata,guidata(hObject)),...
    'max',1,...
    'value',1,...
    'tag','shearLcsNegCheckbox',...
    'enable','off')

posBot = posBot - vertSpace;

uicontrol('Parent',shearlineTab,...
    'Style','text',...
    'Units','characters',...
    'Position',[posLeft-1 posBot 12 posHeight],...
    'String','<d_g> tol.')

uicontrol('parent',shearlineTab,...
    'style','edit',...
    'units','characters',...
    'position',[posLeft+11 posBot+.2 7 posHeight],...
    'backgroundcolor','white',...
    'string',blanks(0),...
    'tag','shearAverageGeodesicDeviationNegTol',...
    'enable','off',...
    'createFcn',{@local_CreateFcn,@(hObject,eventdata)edit_CreateFcn(...
    hObject,eventdata,guidata(hObject)),appdata},...
    'callback',@(hObject,eventdata)...
    shearAverageGeodesicDeviationNegTol_callback(hObject,eventdata,...
    guidata(hObject)))

h45 = uimenu('Parent',lcsToolFigure,...
    'Callback',@(hObject,eventdata) settingsMenu_Callback(hObject,eventdata,guidata(hObject)),...
    'Label','&Settings',...
    'Tag','settingsMenu',...
    'CreateFcn', {@local_CreateFcn,blanks(0),appdata});

uimenu('Parent',h45,...
    'Callback',@(hObject,eventdata) settingsFlowParameters_Callback(hObject,eventdata,guidata(hObject)),...
    'Label','Flow parameters...',...
    'Tag','settingsFlowParameters',...
    'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

hsingleton = lcsToolFigure;

% Set application data first then calling the CreateFcn. 
function local_CreateFcn(hObject,eventdata,createfcn,appdata)

if ~isempty(appdata)
   names = fieldnames(appdata);
   for i=1:length(names)
       name = char(names(i));
       % setappdata(hObject,name,getfield(appdata,name));
       setappdata(hObject,name,appdata.(name));
   end
end

if ~isempty(createfcn)
   if isa(createfcn,'function_handle')
       createfcn(hObject, eventdata);
   else
       eval(createfcn);
   end
end

% --- Handles default GUIDE GUI creation and callback dispatch
function varargout = gui_mainfcn(gui_State, varargin)

gui_StateFields =  {'gui_Name'
    'gui_Singleton'
    'gui_OpeningFcn'
    'gui_OutputFcn'
    'gui_LayoutFcn'
    'gui_Callback'};
gui_Mfile = '';
for i=1:length(gui_StateFields)
    if ~isfield(gui_State, gui_StateFields{i})
        error(message('MATLAB:guide:StateFieldNotFound', gui_StateFields{ i }, gui_Mfile));
    elseif isequal(gui_StateFields{i}, 'gui_Name')
        gui_Mfile = [gui_State.(gui_StateFields{i}), '.m'];
    end
end

numargin = length(varargin);

if numargin == 0
    % LCS_TOOL_EXPORT
    % create the GUI only if we are not in the process of loading it
    % already
    gui_Create = true;
elseif local_isInvokeActiveXCallback(gui_State,varargin{:})
    % LCS_TOOL_EXPORT(ACTIVEX,...)
    vin{1} = gui_State.gui_Name;
    vin{2} = [get(varargin{1}.Peer, 'Tag'), '_', varargin{end}];
    vin{3} = varargin{1};
    vin{4} = varargin{end-1};
    vin{5} = guidata(varargin{1}.Peer);
    feval(vin{:});
    return;
elseif local_isInvokeHGCallback(gui_State, varargin{:})
    % LCS_TOOL_EXPORT('CALLBACK',hObject,eventData,handles,...)
    gui_Create = false;
else
    % LCS_TOOL_EXPORT(...)
    % create the GUI and hand varargin to the openingfcn
    gui_Create = true;
end

if ~gui_Create
    % In design time, we need to mark all components possibly created in
    % the coming callback evaluation as non-serializable. This way, they
    % will not be brought into GUIDE and not be saved in the figure file
    % when running/saving the GUI from GUIDE.
    designEval = false;
    if (numargin>1 && ishghandle(varargin{2}))
        fig = varargin{2};
        while ~isempty(fig) && ~ishghandle(fig,'figure')
            fig = get(fig,'parent');
        end
        
        designEval = isappdata(0,'CreatingGUIDEFigure') || isprop(fig,'__GUIDEFigure');
    end
        
    if designEval
        beforeChildren = findall(fig);
    end
    
    % evaluate the callback now
    varargin{1} = gui_State.gui_Callback;
    if nargout
        [varargout{1:nargout}] = feval(varargin{:});
    else       
        feval(varargin{:});
    end
    
    % Set serializable of objects created in the above callback to off in
    % design time. Need to check whether figure handle is still valid in
    % case the figure is deleted during the callback dispatching.
    if designEval && ishghandle(fig)
        set(setdiff(findall(fig),beforeChildren), 'Serializable','off');
    end
else
    if gui_State.gui_Singleton
        gui_SingletonOpt = 'reuse';
    else
        gui_SingletonOpt = 'new';
    end

    % Check user passing 'visible' P/V pair first so that its value can be
    % used by openfig to prevent flickering
    gui_Visible = 'auto';
    gui_VisibleInput = '';
    for index=1:2:length(varargin)
        if length(varargin) == index || ~ischar(varargin{index})
            break;
        end

        % Recognize 'visible' P/V pair
        len1 = min(length('visible'),length(varargin{index}));
        len2 = min(length('off'),length(varargin{index+1}));
        if ischar(varargin{index+1}) && strncmpi(varargin{index},'visible',len1) && len2 > 1
            if strncmpi(varargin{index+1},'off',len2)
                gui_Visible = 'invisible';
                gui_VisibleInput = 'off';
            elseif strncmpi(varargin{index+1},'on',len2)
                gui_Visible = 'visible';
                gui_VisibleInput = 'on';
            end
        end
    end
    
    % Open fig file with stored settings.  Note: This executes all component
    % specific CreateFunctions with an empty HANDLES structure.

    
    % Do feval on layout code in m-file if it exists
    gui_Exported = ~isempty(gui_State.gui_LayoutFcn);
    % this application data is used to indicate the running mode of a GUIDE
    % GUI to distinguish it from the design mode of the GUI in GUIDE. it is
    % only used by actxproxy at this time.   
    setappdata(0,genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]),1);
    if gui_Exported
        gui_hFigure = feval(gui_State.gui_LayoutFcn, gui_SingletonOpt);

        % make figure invisible here so that the visibility of figure is
        % consistent in OpeningFcn in the exported GUI case
        if isempty(gui_VisibleInput)
            gui_VisibleInput = get(gui_hFigure,'Visible');
        end
        % set(gui_hFigure,'Visible','off')

        % openfig (called by local_openfig below) does this for guis without
        % the LayoutFcn. Be sure to do it here so guis show up on screen.
        movegui(gui_hFigure,'onscreen');
    else
        gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt, gui_Visible);
        % If the figure has InGUIInitialization it was not completely created
        % on the last pass.  Delete this handle and try again.
        if isappdata(gui_hFigure, 'InGUIInitialization')
            delete(gui_hFigure);
            gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt, gui_Visible);
        end
    end
    if isappdata(0, genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]))
        rmappdata(0,genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]));
    end

    % Set flag to indicate starting GUI initialization
    setappdata(gui_hFigure,'InGUIInitialization',1);

    % Fetch GUIDE Application options
    gui_Options = getappdata(gui_hFigure,'GUIDEOptions');
    % Singleton setting in the GUI M-file takes priority if different
    gui_Options.singleton = gui_State.gui_Singleton;

    if ~isappdata(gui_hFigure,'GUIOnScreen')
        % Adjust background color
        if gui_Options.syscolorfig
            set(gui_hFigure,'Color', get(0,'DefaultUicontrolBackgroundColor'));
        end

        % Generate HANDLES structure and store with GUIDATA. If there is
        % user set GUI data already, keep that also.
        data = guidata(gui_hFigure);
        handles = guihandles(gui_hFigure);
        if ~isempty(handles)
            if isempty(data)
                data = handles;
            else
                names = fieldnames(handles);
                for k=1:length(names)
                    data.(char(names(k)))=handles.(char(names(k)));
                end
            end
        end
        guidata(gui_hFigure, data);
    end

    % Apply input P/V pairs other than 'visible'
    for index=1:2:length(varargin)
        if length(varargin) == index || ~ischar(varargin{index})
            break;
        end

        len1 = min(length('visible'),length(varargin{index}));
        if ~strncmpi(varargin{index},'visible',len1)
            % try set(gui_hFigure, varargin{index}, varargin{index+1}), catch, break, end
            try
                set(gui_hFigure, varargin{index}, varargin{index+1})
            catch %#ok<CTCH>
                break
            end
        end
    end

    % If handle visibility is set to 'callback', turn it on until finished
    % with OpeningFcn
    gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');
    if strcmp(gui_HandleVisibility, 'callback')
        set(gui_hFigure,'HandleVisibility', 'on');
    end

    feval(gui_State.gui_OpeningFcn, gui_hFigure, [], guidata(gui_hFigure), varargin{:});

    if isscalar(gui_hFigure) && ishghandle(gui_hFigure)
        % Handle the default callbacks of predefined toolbar tools in this
        % GUI, if any
        guidemfile('restoreToolbarToolPredefinedCallback',gui_hFigure); 
        
        % Update handle visibility
        set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);

        % Call openfig again to pick up the saved visibility or apply the
        % one passed in from the P/V pairs
        if ~gui_Exported
            gui_hFigure = local_openfig(gui_State.gui_Name, 'reuse',gui_Visible);
        elseif ~isempty(gui_VisibleInput)
            set(gui_hFigure,'Visible',gui_VisibleInput);
        end
        if strcmpi(get(gui_hFigure, 'Visible'), 'on')
            figure(gui_hFigure);
            
            if gui_Options.singleton
                setappdata(gui_hFigure,'GUIOnScreen', 1);
            end
        end

        % Done with GUI initialization
        if isappdata(gui_hFigure,'InGUIInitialization')
            rmappdata(gui_hFigure,'InGUIInitialization');
        end

        % If handle visibility is set to 'callback', turn it on until
        % finished with OutputFcn
        gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');
        if strcmp(gui_HandleVisibility, 'callback')
            set(gui_hFigure,'HandleVisibility', 'on');
        end
        gui_Handles = guidata(gui_hFigure);
    else
        gui_Handles = [];
    end

    if nargout
        [varargout{1:nargout}] = feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);
    else
        feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);
    end

    if isscalar(gui_hFigure) && ishghandle(gui_hFigure)
        set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);
    end
end

function gui_hFigure = local_openfig(name, singleton, visible)

% openfig with three arguments was new from R13. Try to call that first, if
% failed, try the old openfig.
if nargin('openfig') == 2
    % OPENFIG did not accept 3rd input argument until R13,
    % toggle default figure visible to prevent the figure
    % from showing up too soon.
    gui_OldDefaultVisible = get(0,'defaultFigureVisible');
    set(0,'defaultFigureVisible','off');
    gui_hFigure = openfig(name, singleton);
    set(0,'defaultFigureVisible',gui_OldDefaultVisible);
else
    gui_hFigure = openfig(name, singleton, visible);  
    %workaround for CreateFcn not called to create ActiveX
    if feature('HGUsingMATLABClasses')
        peers=findobj(findall(allchild(gui_hFigure)),'type','uicontrol','style','text');    
        for i=1:length(peers)
            if isappdata(peers(i),'Control')
                actxproxy(peers(i));
            end            
        end
    end
end

% function result = local_isInvokeActiveXCallback(gui_State, varargin)
function result = local_isInvokeActiveXCallback(~,varargin)

try
    result = ispc && iscom(varargin{1}) ...
             && isequal(varargin{1},gcbo);
catch %#ok<CTCH>
    result = false;
end

function result = local_isInvokeHGCallback(gui_State, varargin)

try
    fhandle = functions(gui_State.gui_Callback);
    result = ~isempty(strfind(gui_State.gui_Name,fhandle.file)) || ...
             (ischar(varargin{1}) ...
             && isequal(ishghandle(varargin{2}), 1) ...
             && (~isempty(strfind(varargin{1},[get(varargin{2}, 'Tag'), '_'])) || ...
                ~isempty(strfind(varargin{1}, '_CreateFcn'))) );
catch %#ok<CTCH>
    result = false;
end

function center_waitbar(waitbar,parentFigure)

set(waitbar,'Units',get(parentFigure,'Units'))
parentPosition = get(parentFigure,'position');
leftLcsTool = parentPosition(1);
bottomLcsTool = parentPosition(2);
widthLcsTool = parentPosition(3);
heightLcsTool = parentPosition(4);
waitbarPosition = get(waitbar,'outerPosition');
widthWaitbar = waitbarPosition(3);
heightWaitbar = waitbarPosition(4);
leftWaitbar = leftLcsTool + .5*(widthLcsTool - widthWaitbar);
bottomWaitbar = bottomLcsTool + .5*(heightLcsTool - heightWaitbar);
set(waitbar,'outerPosition',[leftWaitbar bottomWaitbar waitbarPosition(3:4)])
